% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterFeatures.R
\name{filterFeatures}
\alias{filterFeatures}
\title{Filter features by thresholding filter values.}
\usage{
filterFeatures(task, method = "randomForestSRC.rfsrc", fval = NULL,
  perc = NULL, abs = NULL, threshold = NULL, mandatory.feat = NULL, ...)
}
\arguments{
\item{task}{([Task])\cr
The task.}

\item{method}{(`character(1)`)\cr
See [listFilterMethods].
Default is \dQuote{randomForestSRC.rfsrc}.}

\item{fval}{([FilterValues])\cr
Result of [generateFilterValuesData].
If you pass this, the filter values in the object are used for feature filtering.
`method` and `...` are ignored then.
Default is `NULL` and not used.}

\item{perc}{(`numeric(1)`)\cr
If set, select `perc`*100 top scoring features.
Mutually exclusive with arguments `abs` and `threshold`.}

\item{abs}{(`numeric(1)`)\cr
If set, select `abs` top scoring features.
Mutually exclusive with arguments `perc` and `threshold`.}

\item{threshold}{(`numeric(1)`)\cr
If set, select features whose score exceeds `threshold`.
Mutually exclusive with arguments `perc` and `abs`.}

\item{mandatory.feat}{([character])\cr
Mandatory features which are always included regardless of their scores}

\item{...}{(any)\cr
Passed down to selected filter method.}
}
\value{
[Task].
}
\description{
First, calls [generateFilterValuesData].
Features are then selected via `select` and `val`.
}
\seealso{
Other filter: \code{\link{generateFilterValuesData}},
  \code{\link{getFilterValues}},
  \code{\link{getFilteredFeatures}},
  \code{\link{listFilterMethods}},
  \code{\link{makeFilterWrapper}},
  \code{\link{makeFilter}}, \code{\link{plotFilterValues}}
}

