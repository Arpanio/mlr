language: r
sudo: required
dist: trusty
cache:
#  - packages
  - ccache

env:
  global:
    - _R_CHECK_TIMINGS_=0
    - _R_CHECK_FORCE_SUGGESTS_=0  # no error if suggested packs are not avail
    - _R_CHECK_TESTS_NLINES_=999
    - R_MAX_NUM_DLLS=999
    - secure: "d0xff7hriQyReF4y3/iR5sHJlXocKNKcN6/Gi/r9Hxsfuh2Hx3fouQCMSPP+Oba6MDgEvAfryToAxcmaoZByQMwgevB0OBy5xkatj3oTHmhN5Nbk3jNXxXfA6P0Oqxaf7lXVZk2+Ly+PWnbgXn0uhjzdaZo0cWtVJ660ajS0x9Q="
    - WARMUPPKGS='roxygen2 pander mlrMBO purrr mlbench mldr RWeka RWekajars knitr dplyr ggplot2 ranger randomForest kernlab Rfast igraph rjson rmarkdown shiny svglite xgboost xml2'

addons:
  apt:
    packages:
      - libgmp-dev
      - libgsl0-dev
      - ghostscript # for mlr-tutorial pdf
      - imagemagick # for pkgdown favicon

jobs:
  fast_finish: true
  allow_failures:
    - env: TUTORIAL=HTML
    - env: TUTORIAL=PDF
  include:
    - stage: warmup-1
      # only stages with the same env share a cache
      env: check=TRUE
      # this should be share to other stages via the cache
      r_github_packages:
        - berndbischl/BBmisc
        - berndbischl/parallelMap
        - berndbischl/ParamHelpers
        - jimhester/lintr
      #before_install:
      #  - R -q -e 'install.packages("devtools"); devtools::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
      install:
        - Rscript -e 'pkgs = trimws(strsplit(Sys.getenv("WARMUPPKGS"), " ")[[1]]); pkgs = pkgs[!pkgs %in% installed.packages()]; if (length(pkgs) > 0) install.packages(pkgs)'
        - R -q -e 'tic::install()'
      script: true
    - stage: warmup-2
      env: check=TRUE
      install: R -q -e 'tic::install()'
      script: true
    - stage: check
      env: check=TRUE
      before_install:
        #- sudo make prefix=/usr/local uninstall-libR
        #- wget https://cran.r-project.org/src/base/R-3/R-3.4.3.tar.gz
        #- (mv R-3* /tmp; cd /tmp; tar xzf R-3.4.3.tar.gz)
        #- (cd /tmp/R-3.4.3 ; ./configure --enable-R-shlib --with-lapack --with-blas F77=gfortran; make; sudo make install)
        #- echo 'options(repos = c(CRAN = "http://cloud.r-project.org"))' > ~/.Rprofile.site
        #- Rscript -e 'sessionInfo()'
        - R -q -e 'install.packages("devtools"); devtools::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
      before_script: R -q -e 'tic::before_script()'
      install: R -q -e 'tic::install()'
      warnings_are_errors: true
      script:
        - R CMD build .
        - travis_wait 100 R CMD check mlr*.tar.gz --as-cran --run-donttest
        - grep -q -R "WARNING" "mlr.Rcheck/00check.log" ; [ $? -ne 0 ]
      after_success:
        - git checkout master
        - "export TRAVIS_COMMIT_MSG=\"$(git log --format=%B --no-merges -n 1)\""
        - R --no-save <<< 'library("devtools"); document()'
        - ./thirdparty/gen_families.sh > man/mlrFamilies.Rd
        - git config user.name $GN
        - git config user.email $GM
        - git config credential.helper "store --file=.git/credentials"
        - bash inst/convert_to_ascii_news.sh
        - echo "https://$GT:@github.com" >> .git/credentials
        - git config push.default matching
        - git add --force NEWS
        - git add --force man/*
        - git commit man DESCRIPTION NAMESPACE NEWS -m "update auto-generated documentation [ci skip]" || true
        - git push
        - "[ $TRAVIS_PULL_REQUEST == \"false\" -a $TRAVIS_BRANCH == \"master\" ] && curl -s -X POST -H \"Content-Type:application/json\" -H \"Accept:application/json\" -H \"Travis-API-Version:3\" -H \"Authorization:token $TT\" -d \"{\\\"request\\\":{\\\"branch\\\":\\\"gh-pages\\\", \\\"message\\\":\\\"commit $TRAVIS_COMMIT $TRAVIS_COMMIT_MSG\\\"}}\" https://api.travis-ci.org/repo/mlr-org%2Fmlr-tutorial/requests"
    - stage: Tutorial
      env: TUTORIAL=HTML
      latex: false
      pandoc_version: 2.1.3
      before_install: R -q -e 'install.packages("devtools"); devtools::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
      install: R -q -e 'tic::install()'
      script:  R -q -e 'tic::script()'
      before_deploy: R -q -e 'tic::before_deploy()'
      deploy:
         provider: script
         script: R -q -e 'tic::deploy()'
         on:
           branch: master
           condition: $TRAVIS_PULL_REQUEST = false
    - stage: Tutorial
      env: TUTORIAL=PDF
      pandoc_version: 2.1.3
      before_install: R -q -e 'install.packages("devtools"); devtools::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
      install: R -q -e 'tic::install()'
      script:  R -q -e 'tic::script()'
      before_deploy: R -q -e 'tic::before_deploy()'
      deploy:
         provider: script
         script: R -q -e 'tic::deploy()'
         on:
           branch: master
           condition: $TRAVIS_PULL_REQUEST = false
    - stage: covr
      env: TUTORIAL=HTML
      latex: false
      before_install: R -q -e 'install.packages("devtools"); devtools::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
      script: true
      after_success: R -q -e 'covr::codecov(quiet = FALSE)'

notifications:
  email:
    recipients:
      - bernd_bischl@gmx.net
      - schiffner@math.uni-duesseldorf.de
      - erich.studerus@gmail.com
  slack: mlr-org:DYNA3KIwcG9F4sQoeyTnPBhF#buildnotifications
on_success: change
on_failure: always
