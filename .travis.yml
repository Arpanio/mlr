language: r
sudo: false
dist: trusty
cache: packages

env:
  global:
    - _R_CHECK_TIMINGS_=0
    - _R_CHECK_FORCE_SUGGESTS_=0  # no error if suggested packs are not avail
    - _R_CHECK_TESTS_NLINES_=999
    - R_MAX_NUM_DLLS=999
    - secure: "d0xff7hriQyReF4y3/iR5sHJlXocKNKcN6/Gi/r9Hxsfuh2Hx3fouQCMSPP+Oba6MDgEvAfryToAxcmaoZByQMwgevB0OBy5xkatj3oTHmhN5Nbk3jNXxXfA6P0Oqxaf7lXVZk2+Ly+PWnbgXn0uhjzdaZo0cWtVJ660ajS0x9Q="
    - WARMUPPKGS='roxygen2 pander mlrMBO purrr mlbench mldr RWeka RWekajars knitr dplyr ggplot2 ranger randomForest kernlab Rfast igraph rjson rmarkdown shiny svglite xgboost xml2'

addons:
  apt:
    packages:
      - libgmp-dev
      - libgsl0-dev
      - imagemagick # for pkgdown favicon


warnings_are_errors: true
r_check_args: "--as-cran --run-donttest"

r_github_packages:
  - berndbischl/BBmisc
  - berndbischl/parallelMap
  - berndbischl/ParamHelpers
  - RevolutionAnalytics/quickcheck/pkg
  - jimhester/lintr
  - krlmlr/here

matrix:
  include:
    #- stage: warmup-1
    #  install:
    #    - Rscript -e 'if (length(find.package("devtools", quiet = TRUE)) == 0) install.packages("devtools")'
    #    - Rscript -e 'devtools::install_deps()'
    #    - Rscript -e 'pkgs = trimws(strsplit(Sys.getenv("WARMUPPKGS"), " ")[[1]]); pkgs = pkgs[!pkgs %in% installed.packages()]; if (length(pkgs) > 0) install.packages(pkgs)'
    #  script: true
    #- stage: warmup-2
    #  install:
    #    - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
    #  script: true
    #- stage: check
    #  before_script:
    #    - java -cp $HOME/R/Library/RWekajars/java/weka.jar weka.core.WekaPackageManager -install-package thirdparty/XMeans1.0.4.zip
    #    - R --no-save <<< 'library("devtools"); document()'
    #  script:
    #    - R CMD build .
    #    - travis_wait 100 R CMD check mlr*.tar.gz --as-cran --run-donttest --no-tests
    #    - grep -q -R "WARNING" "mlr.Rcheck/00check.log" ; [ $? -ne 0 ]
    #  after_script:
    #    - ../../travis-tool.sh dump_logs
    #  after_success:
    #    - git checkout master
    #    - "export TRAVIS_COMMIT_MSG=\"$(git log --format=%B --no-merges -n 1)\""
    #    - R --no-save <<< 'library("devtools"); document()'
    #    - ./thirdparty/gen_families.sh > man/mlrFamilies.Rd
    #    - git config user.name $GN
    #    - git config user.email $GM
    #    - git config credential.helper "store --file=.git/credentials"
    #    - echo "https://$GT:@github.com" >> .git/credentials
    #    - git config push.default matching
    #    - git add --force man/*
    #    - git commit man DESCRIPTION NAMESPACE -m "update auto-generated documentation [ci skip]" || true
    #    - git push
    #    - "[ $TRAVIS_PULL_REQUEST == \"false\" -a $TRAVIS_BRANCH == \"master\" ] && curl -s -X POST -H \"Content-Type:application/json\" -H \"Accept:application/json\" -H \"Travis-API-Version:3\" -H \"Authorization:token $TT\" -d \"{\\\"request\\\":{\\\"branch\\\":\\\"gh-pages\\\", \\\"message\\\":\\\"commit $TRAVIS_COMMIT $TRAVIS_COMMIT_MSG\\\"}}\" https://api.travis-ci.org/repo/mlr-org%2Fmlr-tutorial/requests"
    - os: linux
      dist: trusty
      sudo: false
      env: mlr_tutorial_html
      install:
        #- Rscript -e 'install.packages(c("abind", "acepack", "ada", "adabag", "ade4", "bartMachine", "bartMachineJARs", "base64url", "batchtools", "BBmisc", "BH", "bindr", "bindrcpp", "bitops", "brew", "brnn", "broom", "bst", "C50", "car", "care", "caret", "caTools", "checkmate", "circlize", "cli", "clue", "clusterSim", "clValid", "cmaes", "coin", "colorspace", "combinat", "corpcor", "CoxBoost", "crosstalk", "crs", "cubature", "Cubist", "CVST", "cvTools", "data.table", "ddalpha", "deepnet", "DEoptimR", "DiceDesign", "DiceKriging", "DiceOptim", "dichromat", "dimRed", "diptest", "DiscriMiner", "doParallel", "dotCall64", "dplyr", "DRR"))' #e1071, earth, elasticnet, elmNN, emoa, entropy, estimability, evtree, extraTrees, fda, fda.usc, FDboost, fdrtool, fields, flare, flexmix, FNN, foreach, Formula, fpc, frbs, FSelector, gamboostLSS, gamm4, gbm, gdata, gdtools, GenSA, GGally, ggplot2, ggvis, glasso, glmnet, GlobalOptions, glue, gmp, gower, GPfit, gplots, gridExtra, grpreg, gtable, gtools, h2o, hexbin, Hmisc, htmlTable, htmlwidgets, httpuv, igraph, inum, ipred, irace, irlba, iterators, itertools, kernlab, kknn, klaR, labeling, laeken, laGP, lars, latticeExtra, lava, lazyeval, lhs, libcoin, LiblineaR, lintr, lme4, lmtest, lqa, lubridate, magic, maps, maptree, matrixcalc, MatrixModels, mboost, mclust, mco, mda, minqa, misc3d, missForest, mlbench, mldr, mlr, mlrMBO, mnormt, modeest, ModelMetrics, modeltools, mRMRe, multcomp, munsell, mvoutlier, mvtnorm, neuralnet, nloptr, nnls, nodeHarvest, np, numDeriv, pamr, parallelMap, ParamHelpers, party, partykit, pbivnorm, pbkrtest, pbs, pcaPP, penalized, pkgconfig, plogr, plot3D, plotly, plotmo, plotrix, pls, plyr, PMCMR, prabclus, praise, prodlim, progress, psych, purrr, quadprog, quantreg, R2HTML, randomForest, randomForestSRC, randtoolbox, ranger, rappdirs, RColorBrewer, RcppArmadillo, RcppEigen, RcppGSL, RcppRoll, RcppZiggurat, RCurl, recipes, refund, reshape, reshape2, rex, Rfast, rFerns, rgenoud, rgl, rJava, rjson, RJSONIO, rknn, rlang, RLRsim, rngWELL, robCompositions, robustbase, ROCR, rotationForest, rrcov, RRF, rrlda, rsm, RSNNS, RWeka, RWekajars, sandwich, scales, sda, sfsmisc, sgeostat, shape, shiny, smoof, sourcetools, sp, spam, sparseLDA, SparseM, sROC, stabs, stepPlr, stringdist, strucchange, survAUC, svglite, SwarmSVM, TeachingDemos, testthat, tgp, TH.data, tibble, tidyr, tidyselect, timeDate, trimcluster, vcd, VIM, viridis, viridisLite, wavelets, xgboost, XML, xtable, zoo'
        - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::install()'
      after_install: R -q -e 'tic::after_install()'
      before_script: R -q -e 'tic::before_script()'
      script:
        - R -q -e 'install.packages("rmarkdown"); remotes::install_github("krlmlr/here"); tic::prepare_all_stages(); tic::before_install()'
        - R -q -e 'remotes::install_github("mlr-org/mlr")' # for some reason we need to call this as R CMD build does not install the github version (??). Getting 'Faceting must contain at least' error otherwise
      before_deploy: R -q -e 'tic::before_deploy(); remotes::install_github("jimhester/lintr"); install.packages("pander");remotes::install_github("pat-s/pkgdown")'
      deploy:
         provider: script
         script: R -q -e 'tic::deploy()'
         on:
           all_branches: true
      after_deploy: R -q -e 'tic::after_deploy()'
      after_script: R -q -e 'tic::after_script()'
    - os: linux
      dist: trusty
      sudo: false
      env: mlr_tutorial_pdf
      install:
        #- Rscript -e 'install.packages(c("abind", "acepack", "ada", "adabag", "ade4", "bartMachine", "bartMachineJARs", "base64url", "batchtools", "BBmisc", "BH", "bindr", "bindrcpp", "bitops", "brew", "brnn", "broom", "bst", "C50", "car", "care", "caret", "caTools", "checkmate", "circlize", "cli", "clue", "clusterSim", "clValid", "cmaes", "coin", "colorspace", "combinat", "corpcor", "CoxBoost", "crosstalk", "crs", "cubature", "Cubist", "CVST", "cvTools", "data.table", "ddalpha", "deepnet", "DEoptimR", "DiceDesign", "DiceKriging", "DiceOptim", "dichromat", "dimRed", "diptest", "DiscriMiner", "doParallel", "dotCall64", "dplyr", "DRR"))' #e1071, earth, elasticnet, elmNN, emoa, entropy, estimability, evtree, extraTrees, fda, fda.usc, FDboost, fdrtool, fields, flare, flexmix, FNN, foreach, Formula, fpc, frbs, FSelector, gamboostLSS, gamm4, gbm, gdata, gdtools, GenSA, GGally, ggplot2, ggvis, glasso, glmnet, GlobalOptions, glue, gmp, gower, GPfit, gplots, gridExtra, grpreg, gtable, gtools, h2o, hexbin, Hmisc, htmlTable, htmlwidgets, httpuv, igraph, inum, ipred, irace, irlba, iterators, itertools, kernlab, kknn, klaR, labeling, laeken, laGP, lars, latticeExtra, lava, lazyeval, lhs, libcoin, LiblineaR, lintr, lme4, lmtest, lqa, lubridate, magic, maps, maptree, matrixcalc, MatrixModels, mboost, mclust, mco, mda, minqa, misc3d, missForest, mlbench, mldr, mlr, mlrMBO, mnormt, modeest, ModelMetrics, modeltools, mRMRe, multcomp, munsell, mvoutlier, mvtnorm, neuralnet, nloptr, nnls, nodeHarvest, np, numDeriv, pamr, parallelMap, ParamHelpers, party, partykit, pbivnorm, pbkrtest, pbs, pcaPP, penalized, pkgconfig, plogr, plot3D, plotly, plotmo, plotrix, pls, plyr, PMCMR, prabclus, praise, prodlim, progress, psych, purrr, quadprog, quantreg, R2HTML, randomForest, randomForestSRC, randtoolbox, ranger, rappdirs, RColorBrewer, RcppArmadillo, RcppEigen, RcppGSL, RcppRoll, RcppZiggurat, RCurl, recipes, refund, reshape, reshape2, rex, Rfast, rFerns, rgenoud, rgl, rJava, rjson, RJSONIO, rknn, rlang, RLRsim, rngWELL, robCompositions, robustbase, ROCR, rotationForest, rrcov, RRF, rrlda, rsm, RSNNS, RWeka, RWekajars, sandwich, scales, sda, sfsmisc, sgeostat, shape, shiny, smoof, sourcetools, sp, spam, sparseLDA, SparseM, sROC, stabs, stepPlr, stringdist, strucchange, survAUC, svglite, SwarmSVM, TeachingDemos, testthat, tgp, TH.data, tibble, tidyr, tidyselect, timeDate, trimcluster, vcd, VIM, viridis, viridisLite, wavelets, xgboost, XML, xtable, zoo'
        - R -q -e 'install.packages(c("remotes", "rmarkdown", "bookdown", "pander")); remotes::install_github("krlmlr/here");'
        - R -q -e 'remotes::install_github("mlr-org/mlr")' # for some reason we need to call this as R CMD build does not install the github version (??). Getting 'Faceting must contain at least' error otherwise
        - R -q -e 'rmarkdown::render("vignettes/tutorial/devel/pdf/_pdf_wrapper.Rmd")' # build pdf version
      after_success:
        - git config user.name $GIT_NAME
        - git config user.email $GIT_EMAIL
        - git config credential.helper "store --file=.git/credentials"
        - echo "https://$GH_TOKEN:@github.com" >> .git/credentials
        - git config push.default matching
        - mv vignettes/tutorial/devel/pdf/_pdf_wrapper.pdf vignettes/tutorial/devel/pdf/mlr-tutorial.pdf
        - git add vignettes/tutorial/devel/pdf/mlr-tutorial.pdf
        - git commit -a -m "update auto-generated tutorial pdf version [ci skip]"
        - git push

notifications:
  email:
    recipients:
      - bernd_bischl@gmx.net
      - schiffner@math.uni-duesseldorf.de
      - erich.studerus@gmail.com
  slack: mlr-org:DYNA3KIwcG9F4sQoeyTnPBhF#buildnotifications
on_success: change
on_failure: always
